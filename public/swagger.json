{
    "swagger": "2.0",
    "info": {
        "title": "Sample filestore API",
        "version": "1.0"
    },
    "basePath": "/",
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "AuthController"
                ],
                "summary": "Get a JWT via given credentials",
                "description": "Log in user",
                "operationId": "api.login",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "password",
                        "required": true,
                        "type": "string",
                        "maxLength": 10,
                        "minLength": 6
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User has been logged in successfully"
                    },
                    "422": {
                        "description": "The given data was invalid"
                    }
                }
            }
        },
        "/api/file/{token}": {
            "get": {
                "tags": [
                    "Files"
                ],
                "description": "Get file",
                "operationId": "api.file.show",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token format (Bearer {apikey})",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logout"
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Task"
                ],
                "description": "Get all Tasks",
                "operationId": "api.auth.logout",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token format (Bearer {apikey})",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logout"
                    }
                }
            }
        },
        "/api/task": {
            "post": {
                "tags": [
                    "Task"
                ],
                "description": "Create new task",
                "operationId": "api.task.store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token format (Bearer {apikey})",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "body",
                        "description": "Create Task",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Task created"
                    },
                    "401": {
                        "description": "Token has expired"
                    },
                    "422": {
                        "description": "The given data was invalid"
                    }
                }
            }
        },
        "/api/task/{id}": {
            "delete": {
                "tags": [
                    "Task"
                ],
                "summary": "Delete Task",
                "operationId": "api.task.delete",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization token format (Bearer {apikey})",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        }
    },
    "definitions": {}
}